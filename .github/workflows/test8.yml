name: TestConcurrentScoreForOpenHarmony
on:
#   schedule:
#   - cron: "0 3 * * 1-5"
  workflow_dispatch:

jobs:
  Init:
    runs-on: ubuntu-latest
    outputs:
      RepoList: ${{steps.repos.outputs.RepoList}}
      Date: ${{steps.repos.outputs.today}}
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
      - name: RepoList
        id: repos
        run: |
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          echo "RepoList=${arr[@]}" >> "$GITHUB_OUTPUT"
          echo "today=`date '+%Y-%m-%d %H:%M:%S'`" >> "$GITHUB_OUTPUT"
          
  Thread-First:
    runs-on: ubuntu-latest
    needs: [Init]
    env: 
      RepoList: ${{needs.Init.outputs.RepoList}}
      Date: ${{needs.Init.outputs.Date}}
    steps:
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          mv scorecard-linux-amd64 scorecard
          
      - name: Score Repositroies
        id: first
        env: 
          GH_TOKEN: ${{secrets.GH_TOKEN1}}
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE
          arr=($RepoList)
          length=${#arr[@]}
          mkdir $Date
          cd $Date
          for((i=0;i<length;i=i+5));do
              count=$(($count+1));
              echo "count value :${count}"
              if [ $i -lt $length ];then
                    name=${arr[$i]}
                    FILE_NAME=$name.json
                    repoName=https://github.com/laiyoufafa/$name
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FILE_NAME
                    echo "name:first  ${repoName} finished"
                    sleep 2s
              fi
          done
        
          export GH_TOKEN=${{secrets.GH_TOKEN}}
          gh repo clone $GITHUB_REPOSITORY /tmp/.github
          cd /tmp/.github
          mv $GITHUB_WORKSPACE/$Date /tmp/.github/
          gh auth setup-git -h github.com
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update profile/scorecards.txt from CI"
          git push 

  Thread-Second:
      runs-on: ubuntu-latest
      needs: [Init]
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
        Date: ${{needs.Init.outputs.Date}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: second
          env: 
            GH_TOKEN: ${{secrets.USER2}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            arr=($RepoList)
            length=${#arr[@]}
            mkdir $Date
            cd $Date
            for((i=1;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                    name=${arr[$i]}
                    FILE_NAME=$name.json
                    repoName=https://github.com/laiyoufafa/$name
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FILE_NAME
                    echo "name:first  ${repoName} finished"
                    sleep 2s
                fi
            done
            export GH_TOKEN=${{secrets.GH_TOKEN}}
            gh repo clone $GITHUB_REPOSITORY /tmp/.github
            cd /tmp/.github
            mv $GITHUB_WORKSPACE/$Date /tmp/.github/
            gh auth setup-git -h github.com
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update profile/scorecards.txt from CI"
            git push

  Thread-Third:
      runs-on: ubuntu-latest
      needs: [Init]
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
        Date: ${{needs.Init.outputs.Date}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: third
          env: 
            GH_TOKEN: ${{secrets.USER3}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            arr=($RepoList)
            length=${#arr[@]}
            mkdir $Date
            cd $Date
            for((i=2;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                    name=${arr[$i]}
                    FILE_NAME=$name.json
                    repoName=https://github.com/laiyoufafa/$name
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FILE_NAME
                    echo "name:first  ${repoName} finished"
                    sleep 2s
                fi
             done
             export GH_TOKEN=${{secrets.GH_TOKEN}}
            gh repo clone $GITHUB_REPOSITORY /tmp/.github
            cd /tmp/.github
            mv $GITHUB_WORKSPACE/$Date /tmp/.github/
            gh auth setup-git -h github.com
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update profile/scorecards.txt from CI"
            git push

  Thread-Fourth:
      runs-on: ubuntu-latest
      needs: [Init]
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
        Date: ${{needs.Init.outputs.Date}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: fourth
          env: 
            GH_TOKEN: ${{secrets.USER4}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            arr=($RepoList)
            length=${#arr[@]}
            mkdir $Date
            cd $Date
            for((i=3;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                    name=${arr[$i]}
                    FILE_NAME=$name.json
                    repoName=https://github.com/laiyoufafa/$name
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FILE_NAME
                    echo "name:first  ${repoName} finished"
                    sleep 2s
                fi
            done
            export GH_TOKEN=${{secrets.GH_TOKEN}}
            gh repo clone $GITHUB_REPOSITORY /tmp/.github
            cd /tmp/.github
            mv $GITHUB_WORKSPACE/$Date /tmp/.github/
            gh auth setup-git -h github.com
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update profile/scorecards.txt from CI"
            git push

  Thread-Fifth:
      runs-on: ubuntu-latest
      needs: [Init]
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
        Date: ${{needs.Init.outputs.Date}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: fifth
          env: 
            GH_TOKEN: ${{secrets.SCORE_TS2}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            arr=($RepoList)
            length=${#arr[@]}
            mkdir
            for((i=4;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                    name=${arr[$i]}
                    FILE_NAME=$name.json
                    repoName=https://github.com/laiyoufafa/$name
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FILE_NAME
                    echo "name:first  ${repoName} finished"
                    sleep 2s
                fi
            done
            export GH_TOKEN=${{secrets.GH_TOKEN}}
            gh repo clone $GITHUB_REPOSITORY /tmp/.github
            cd /tmp/.github
            mv $GITHUB_WORKSPACE/$Date /tmp/.github/
            gh auth setup-git -h github.com
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update profile/scorecards.txt from CI"
            git push
