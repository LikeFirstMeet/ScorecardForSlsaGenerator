name: Test7
on:
#   schedule:
#   - cron: "0 2 * * 1-5"
  workflow_dispatch:

jobs:
  Init:
    runs-on: ubuntu-latest
    outputs:
      RepoList: ${{steps.repos.outputs.RepoList}}
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
      - name: RepoList
        id: repos
        run: |
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          echo "RepoList=${arr[@]}" >> "$GITHUB_OUTPUT"    
  Thread-First:
    runs-on: ubuntu-latest
    needs: [Init]
    outputs: 
      FIRST_RESULT: ${{steps.first.outputs.FIRST_RESULT}}
    env: 
      RepoList: ${{needs.Init.outputs.RepoList}}
    steps:
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          mv scorecard-linux-amd64 scorecard
          
      - name: Score Repositroies
        id: first
        env: 
          GH_TOKEN: ${{secrets.GH_TOKEN1}}
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE
          echo "==========================="
          pwd
          ls -ll
          echo "==========================="
          FIRST_FILE=a.txt
          touch $FIRST_FILE
          arr=($RepoList)
          length=${#arr[@]}
          for((i=0;i<length;i=i+5));do
              count=$(($count+1));
              echo "count value :${count}"
              if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo=$repoName --format=json) || true
                    echo $str >> $FIRST_FILE
                    echo "name:first  ${repoName} finished"
                    sleep 2s
              fi
          done
          echo "FIRST_RESULT=$(cat $FIRST_FILE)" >> "$GITHUB_OUTPUT"    

  Thread-Second:
      runs-on: ubuntu-latest
      needs: [Init]
      outputs: 
        SECOND_RESULT: ${{steps.second.outputs.SECOND_RESULT}}
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: second
          env: 
            GH_TOKEN: ${{secrets.USER2}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            echo "==========================="
            pwd
            ls -ll
            echo "==========================="
            SECOND_FILE=b.txt
            touch $SECOND_FILE
            arr=($RepoList)
            length=${#arr[@]}
            for((i=1;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                      repoName=https://github.com/laiyoufafa/${arr[$i]}
                      echo "name:second time:${i}    repos_url:${repoName} "
                      str=""
                      str=$(scorecard --repo=$repoName --format=json) || true
                      echo $str >> $SECOND_FILE
                      echo "name:second  ${repoName} finished"
                      sleep 4s
                fi
            done
            echo "SECOND_RESULT=$(cat $SECOND_FILE)" >> "$GITHUB_OUTPUT"

  Thread-Third:
      runs-on: ubuntu-latest
      needs: [Init]
      outputs: 
        THIRD_RESULT: ${{steps.third.outputs.THIRD_RESULT}}
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: third
          env: 
            GH_TOKEN: ${{secrets.USER3}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            echo "==========================="
            pwd
            ls -ll
            echo "==========================="
            THIRD_FILE=c.txt
            touch $THIRD_FILE
            arr=($RepoList)
            length=${#arr[@]}
            for((i=2;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                      export GITHUB_AUTH_TOKEN=${{ secrets.GH_TOKEN1}}
                      repoName=https://github.com/laiyoufafa/${arr[$i]}
                      echo "name:third time:${i}    repos_url:${repoName} "
                      str=""
                      str=$(scorecard --repo=$repoName --format=json) || true
                      echo $str >> $THIRD_FILE
                      echo "name:third  ${repoName} finished"
                      sleep 2s
                fi
             done 
             echo "THIRD_RESULT=$(cat $THIRD_FILE)" >> "$GITHUB_OUTPUT"
  Thread-Fourth:
      runs-on: ubuntu-latest
      needs: [Init]
      outputs: 
        FOURTH_RESULT: ${{steps.fourth.outputs.FOURTH_RESULT}}
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: fourth
          env: 
            GH_TOKEN: ${{secrets.USER4}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            echo "==========================="
            pwd
            ls -ll
            echo "==========================="
            FOURTH_FILE=d.txt
            touch $FOURTH_FILE
            arr=($RepoList)
            length=${#arr[@]}
            for((i=3;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                      repoName=https://github.com/laiyoufafa/${arr[$i]}
                      echo "name:fourth time:${i}    repos_url:${repoName} "
                      str=""
                      str=$(scorecard --repo=$repoName --format=json) || true
                      echo $str >> $FOURTH_FILE
                      echo "name:fourth  ${repoName} finished"
                      sleep 2s
                fi
            done
            echo "FOURTH_RESULT=$(cat $FOURTH_FILE)" >> "$GITHUB_OUTPUT"  
  Thread-Fifth:
      runs-on: ubuntu-latest
      needs: [Init]
      outputs: 
        FIFTH_RESULT: ${{steps.fifth.outputs.FIFTH_RESULT}}
      env: 
        RepoList: ${{needs.Init.outputs.RepoList}}
      steps:
        - name: Get Scorecard
          run: |
            wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
            tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
            mv scorecard-linux-amd64 scorecard

        - name: Score Repositroies
          id: fifth
          env: 
            GH_TOKEN: ${{secrets.SCORE_TS2}}
          run: |
            export PATH=$PATH:$GITHUB_WORKSPACE
            echo "==========================="
            pwd
            ls -ll
            echo "==========================="
            FIFTH_FILE=e.txt
            touch $FIFTH_FILE
            arr=($RepoList)
            length=${#arr[@]}
            for((i=4;i<length;i=i+5));do
                count=$(($count+1));
                echo "count value :${count}"
                if [ $i -lt $length ];then
                      repoName=https://github.com/laiyoufafa/${arr[$i]}
                      echo "name:fifth time:${i}    repos_url:${repoName} "
                      str=""
                      str=$(scorecard --repo=$repoName --format=json) || true
                      echo $str >> $FIFTH_FILE
                      echo "name:fifth  ${repoName} finished"
                      sleep 2s
                fi
            done
            echo "FIFTH_RESULT=$(cat $FIFTH_FILE)" >> "$GITHUB_OUTPUT"
  Thread-Finally:
      runs-on: ubuntu-latest
      needs: [Thread-First,Thread-Second,Thread-Third,Thread-Fourth,Thread-Fifth]
      env: 
        FIRST_RESULT: ${{needs.Thread-First.outputs.FIRST_RESULT}}
        SECOND_RESULT: ${{needs.Thread-Second.outputs.SECOND_RESULT}}
        THIRD_RESULT: ${{needs.Thread-Third.outputs.THIRD_RESULT}}
        FOURTH_RESULT: ${{needs.Thread-Fourth.outputs.FOURTH_RESULT}}
        FIFTH_RESULT: ${{needs.Thread-Fifth.outputs.FIFTH_RESULT}}
      steps:
        - name: Score Repositroies
          env: 
            GH_TOKEN: ${{secrets.GH_TOKEN}}
          run: |
            # 下载当前仓库
            gh repo clone $GITHUB_REPOSITORY /tmp/.github
            cd /tmp/.github
            if [ ! -d "profile" ]; then
              mkdir profile
            fi
            if [ -f "$TARGET_FILE" ]; then
              rm $TARGET_FILE
            fi
            TARGET_FILE=scorecards.txt
            touch $TARGET_FILE
            cat $FIRST_RESULT >> $TARGET_FILE
            cat $SECOND_RESULT >> $TARGET_FILE
            cat $THIRD_RESULT >> $TARGET_FILE
            cat $FOURTH_RESULT >> $TARGET_FILE
            cat $FIFTH_RESULT >> $TARGET_FILE
            
            gh auth setup-git -h github.com
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git add .
            git commit -m "Update profile/scorecards.txt from CI"
            git push 

