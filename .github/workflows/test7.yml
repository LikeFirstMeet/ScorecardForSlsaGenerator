name: Test7
on:
#   schedule:
#   - cron: "0 2 * * 1-5"
  workflow_dispatch:

jobs:
  Init:
    runs-on: ubuntu-latest
    outputs:
      RepoList: ${{steps.repos.outputs.RepoList}}
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
      - name: RepoList
        id: repos
        run: |
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          echo "RepoList=${arr[@]}" >> "$GITHUB_OUTPUT"
          
  Thread-First:
    runs-on: ubuntu-latest
    needs: [Init]
    env: 
      RepoList: ${{needs.Init.outputs.RepoList}}
    steps:
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          mv scorecard-linux-amd64 scorecard
      - name: Score Repositroies
        env: 
          GH_TOKEN: ${{secrets.GH_TOKEN}}
        run: |
          export PATH=$PATH:$GITHUB_WORKSPACE
          FIRST_FILE=a.txt
          touch $FIRST_FILE
          arr=$RepoList
          length=${#arr[@]}
          for((i=0;i<length;i=i+5));do
              count=$(($count+1));
              echo "count value :${count}"
              if [ $i -lt $length ];then
                    export GITHUB_AUTH_TOKEN=${{ secrets.GH_TOKEN1}}
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "name:first time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo $repoName --format json) || true
                    echo $str >> $FIRST_FILE
                    echo "name:first  ${repoName} finished"
                    sleep 4s
              fi
            done
          
          # 下载当前仓库
          gh repo clone $GITHUB_REPOSITORY /tmp/.github
          cd /tmp/.github
          if [ ! -d "profile" ]; then
            mkdir profile
          fi
          if [ -f "$TARGET_FILE" ]; then
            rm $TARGET_FILE
          fi
          mv $GITHUB_WORKSPACE/$FIRST_FILE /tmp/.github/profile
          
          gh auth setup-git -h github.com
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update profile/scores.txt from CI"
          git push 
         
