name: Test2
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
          
      # /home/runner/work/ScoreCardActionForOpenHarmony/ScoreCardActionForOpenHarmony
      # - name: current PATH
      #  run: pwd
     
          
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          cp scorecard-linux-amd64 scorecard-first
          cp scorecard-linux-amd64 scorecard-second
          cp scorecard-linux-amd64 scorecard-third
          cp scorecard-linux-amd64 scorecard-fourth
          cp scorecard-linux-amd64 scorecard-fifth
          cp scorecard-linux-amd64 scorecard-sixth
          cp scorecard-linux-amd64 scorecard-seventh
          mv scorecard-linux-amd64 scorecard
          
          
      - name: Score Repositroies
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          env
          # 将scorecard加入环境变量
          export PATH=$PATH:$GITHUB_WORKSPACE
          # 用于存储结果文件
          export TARGET_FILE=/tmp/.github/profile/scores.txt
          export TMP_FILE_FIRST=tmp1.txt
          export TMP_FILE_SECOND=tmp2.txt
          export TMP_FILE_THIRD=tmp3.txt
          export TMP_FILE_FOURTH=tmp4.txt
          export TMP_FILE_FIFTH=tmp5.txt
          export TMP_FILE_SIXTH=tmp6.txt
          export TMP_FILE_SEVENTH=tmp7.txt
          touch $TMP_FILE_FIRST
          touch $TMP_FILE_SECOND
          touch $TMP_FILE_THIRD
          touch $TMP_FILE_FOURTH
          touch $TMP_FILE_FIFTH
          touch $TMP_FILE_SIXTH
          touch $TMP_FILE_SEVENTH
          
          # 下载当前仓库
          gh repo clone $GITHUB_REPOSITORY /tmp/.github
          cd /tmp/.github
          if [ ! -d "profile" ]; then
            mkdir profile
          fi
          if [ -f "$TARGET_FILE" ]; then
            rm $TARGET_FILE
          fi
          touch $TARGET_FILE
          
          # 将仓库列表变成数组格式
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          length=${#arr[@]}
          
          
          #1.创建有名管道
          [ -e ./fd1 ] || mkfifo ./fd1
          [ -e ./fd2 ] || mkfifo ./fd2
          [ -e ./fd3 ] || mkfifo ./fd3
          [ -e ./fd4 ] || mkfifo ./fd4
          [ -e ./fd5 ] || mkfifo ./fd5
          [ -e ./fd6 ] || mkfifo ./fd6
          [ -e ./fd7 ] || mkfifo ./fd7
          [ -e ./fd8 ] || mkfifo ./fd8
          exec 1<> ./fd1
          exec 2<> ./fd2
          exec 3<> ./fd3
          exec 4<> ./fd4
          exec 5<> ./fd5
          exec 6<> ./fd6
          exec 7<> ./fd7
          exec 8<> ./fd8
          rm -rf ./fd1
          rm -rf ./fd2
          rm -rf ./fd3
          rm -rf ./fd4
          rm -rf ./fd5
          rm -rf ./fd6
          rm -rf ./fd7
          rm -rf ./fd8
          #2.创建令牌
          for i in `seq 1 1`;
          do
            echo >&$i
          done
          
          
          #计数器
          count=0
          count_first=0
          count_second=0 
          count_third=0 
          count_four=0 
          count_fifth=0 
          count_sixth=0 
          count_seventh=0 
          count_eighth=0 
          
          
          #拿出令牌进行并发操作
          for((i=0;i<length;i=i+8));do
            count_first=$(($count_first+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u1
            {
                token_number=0
                ((tmp=count_first%3,token_number=tmp*8,token_number=token_number+1))
                export GH_TOKEN =${{ GH_TOKEN$token_number }}
                if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo $repoName --format json)  
                    || 
                      (sleep 60 
                      && { count_first=$(($count_first+1)); ((tmp=count_first%3,token_number=tmp*8,token_number=token_number+1));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                      && str=$(scorecard --repo $repoName --format json)) 
                    || 
                      (sleep 60 
                     && { count_first=$(($count_first+1)); ((tmp=count_first%3,token_number=tmp*8,token_number=token_number+1));export GH_TOKEN =${{ GH_TOKEN$${token_number} }} } 
                     && str=$(scorecard --repo $repoName --format json))  
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TARGET_FILE 
                    echo "name:first  ${repoName} finished"
                    sleep 60s
                    echo >&1
                fi
                
              }&
              echo "name:first"
          done
          
          
          
          for((i=1;i<length;i=i+8));do
            count_second=$(($count_second+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u2
            {
                token_number=0
                ((tmp=count_second%3,token_number=tmp*8,token_number=token_number+1))
                export GH_TOKEN =${{ GH_TOKEN$token_number }}
                if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-first --repo $repoName --format json)   
                    || 
                      (sleep 60 
                      && { count_second=$(($count_second+1));;((tmp=count_second%3,token_number=tmp*8,token_number=token_number+2));export GH_TOKEN =${{ GH_TOKEN$${token_number} }} }
                      && str=$(scorecard-first --repo $repoName --format json))  
                    || 
                      (sleep 60 
                      && { count_second=$(($count_second+1));;((tmp=count_second%3,token_number=tmp*8,token_number=token_number+2));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                      && str=$(scorecard-first --repo $repoName --format json))
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >>  $TMP_FILE_FIRST
                    echo "name:second  ${repoName} finished"
                    sleep 60s
                    echo >&2
                 fi
              }&
              echo "name second"
          done
          for((i=2;i<length;i=i+8));do
            count_third=$(($count_third+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u3
            {
                 token_number=0
                 ((tmp=count_third%3,token_number=tmp*8,token_number=token_number+3))
                 export GH_TOKEN =${{ GH_TOKEN$token_number }}
                 if [ $i -lt $length ];then
                    
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-second --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    && { count_third=$(($count_third+1));((tmp=count_third%3,token_number=tmp*8,token_number=token_number+3));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-second --repo $repoName --format json)) 
                    || 
                    (sleep 60 
                    && { count_third=$(($count_third+1));((tmp=count_third%3,token_number=tmp*8,token_number=token_number+3));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-second --repo $repoName --format json)) 
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_SECOND
                    echo "name third ${repoName} finished"
                    sleep 60s
                    echo >&3
                 fi
                 
              }&
              echo "name third"
          done
          for((i=3;i<length;i=i+8));do
            count_fourth=$(($count_fourth+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u4
            {
                 token_number=0
                 ((tmp=count_fourth%3,token_number=tmp*8,token_number=token_number+4))
                 export GH_TOKEN =${{ GH_TOKEN$token_number }}
                 if [ $i -lt $length ];then

                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-third --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    &&  { count_fourth=$(($count_fourth+1));((tmp=count_fourth%3,token_number=tmp*8,token_number=token_number+4));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    &&  str=$(scorecard-third --repo $repoName --format json)) 
                    || 
                    (sleep 60 
                    &&  { count_fourth=$(($count_fourth+1));((tmp=count_fourth%3,token_number=tmp*8,token_number=token_number+4));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    &&  str=$(scorecard-third --repo $repoName --format json)) 
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_THIRD
                    echo "name:fourth ${repoName}  finished"
                    sleep 60s
                    echo >&4
                 fi
                 
              }&
              echo "name:fourth"
          done
          for((i=4;i<length;i=i+8));do
            count_fifth=$(($count_fifth+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u5
            {
                 token_number=0
                 
                 if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-fourth --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    &&  { count_fifth=$(($count_fifth+1));;((tmp=count_fifth%3,token_number=tmp*8,token_number=token_number+5));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    &&  str=$(scorecard-fourth --repo $repoName --format json)) 
                    || 
                   (sleep 60 
                    &&  { count_fifth=$(($count_fifth+1));;((tmp=count_fifth%3,token_number=tmp*8,token_number=token_number+5));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    &&  str=$(scorecard-fourth --repo $repoName --format json)) 
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_FOURTH
                    echo "name:fifth ${repoName}  finished"
                    sleep 60s
                    echo >&5
                 fi
                 
              }&
              echo "name:fifth"
          done
          for((i=5;i<length;i=i+8));do
            count_sixth=$(($count_sixth+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u6
            {
                 token_number=0
                 ((tmp=count_sixth%3,token_number=tmp*8,token_number=token_number+6))
                 export GH_TOKEN =${{ GH_TOKEN$token_number }}
                 if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-fifth --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    &&   { count_sixth=$(($count_sixth+1));((tmp=count_sixth%3,token_number=tmp*8,token_number=token_number+6));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-fifth --repo $repoName --format json)) 
                    || 
                    (sleep 60 
                    &&   { count_sixth=$(($count_sixth+1));((tmp=count_sixth%3,token_number=tmp*8,token_number=token_number+6));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-fifth --repo $repoName --format json)) 
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_FIFTH
                    echo "name:sixth  ${repoName} finished"
                    sleep 60s
                    echo >&6
                 fi
                 
              }&
              echo "name:sixth"
          done
          for((i=6;i<length;i=i+8));do
            count_seventh=$(($count_seventh+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u7
            {
                 token_number=0
                 ((tmp=count_seventh%3,token_number=tmp*8,token_number=token_number+7))
                 export GH_TOKEN =${{ GH_TOKEN$token_number }}
                if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-sixth --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    && { count_seventh=$(($count_seventh+1));((tmp=count_seventh%3,token_number=tmp*8,token_number=token_number+7));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-sixth --repo $repoName --format json)) 
                    || 
                    (sleep 60 
                    && { count_seventh=$(($count_seventh+1));((tmp=count_seventh%3,token_number=tmp*8,token_number=token_number+7));export GH_TOKEN =${{ GH_TOKEN${token_number} }} } 
                    && str=$(scorecard-sixth --repo $repoName --format json)) 
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >>  $TMP_FILE_SIXTH
                    echo "name:seventh  ${repoName} finished"
                    sleep 60s
                    echo >&7
                 fi
                 
              }&
              echo "name:seventh"
          done
          for((i=7;i<length;i=i+8));do
            count_eighth=$(($count_eighth+1));
            count=$(($count+1));
            echo "count value :${count}"
            read -u8
            {
                 token_number=0
                 ((tmp=count_eighth%3,token_number=tmp*8,token_number=token_number+8))
                 export GH_TOKEN =${{ GH_TOKEN$token_number }}    
                 if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-seventh --repo $repoName --format json)  
                    || 
                    (sleep 60 
                    &&  { count_eighth=$(($count_eighth+1)); ((tmp=count_eighth%3,token_number=tmp*8,token_number=token_number+8));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    && str=$(scorecard-seventh --repo $repoName --format json)) 
                    || 
                     (sleep 60 
                    &&  { count_eighth=$(($count_eighth+1)); ((tmp=count_eighth%3,token_number=tmp*8,token_number=token_number+8));export GH_TOKEN =${{ GH_TOKEN${token_number} }} }
                    && str=$(scorecard-seventh --repo $repoName --format json))
                    ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_SEVENTH
                    echo "name:eighth ${repoName} finished"
                    sleep 60s
                    echo >&8
                 fi
                 
              }&
              echo "name:eighth"
          done
          
          
          
          
          
          wait
          #关闭文件描述读写
          exec 1<&-
          exec 1>&-
          exec 2<&-
          exec 2>&-
          exec 3<&-
          exec 3>&-
          exec 4<&-
          exec 4>&-
          exec 5<&-
          exec 5>&-
          exec 6<&-
          exec 6>&-
          exec 7<&-
          exec 7>&-
          exec 8<&-
          exec 8>&-
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIRST >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SECOND >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_THIRD >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FOURTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIFTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SIXTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SEVENTH >> $TARGET_FILE
          gh auth setup-git -h github.com
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update profile/scores.txt from CI"
          git push
