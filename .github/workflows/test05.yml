name: Test5
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
          
      # /home/runner/work/ScoreCardActionForOpenHarmony/ScoreCardActionForOpenHarmony
      # - name: current PATH
      #  run: pwd
     
          
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          cp scorecard-linux-amd64 scorecard-first
          cp scorecard-linux-amd64 scorecard-second
          cp scorecard-linux-amd64 scorecard-third
          cp scorecard-linux-amd64 scorecard-fourth
          cp scorecard-linux-amd64 scorecard-fifth
          cp scorecard-linux-amd64 scorecard-sixth
          cp scorecard-linux-amd64 scorecard-seventh
          mv scorecard-linux-amd64 scorecard
          
          
      - name: Score Repositroies
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # 将scorecard加入环境变量
          export PATH=$PATH:$GITHUB_WORKSPACE
          # 用于存储结果文件
          export TARGET_FILE=/tmp/.github/profile/scores.txt
          
          # 下载当前仓库
          gh repo clone $GITHUB_REPOSITORY /tmp/.github
          cd /tmp/.github
          if [ ! -d "profile" ]; then
            mkdir profile
          fi
          if [ -f "$TARGET_FILE" ]; then
            rm $TARGET_FILE
          fi
          touch $TARGET_FILE
          
          # 将仓库列表变成数组格式
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          length=${#arr[@]}
          
        
          {
            for((i=0;i<length;i=i+8));do
              repoName=https://github.com/laiyoufafa/${arr[$i]}
              echo "time:${i}    repos_url:${repoName} "
              index=0
              ((tmp=i/8,index=tmp%3))
              if [ $index -eq 0 ];then
                export GH_TOKEN=${{ secrets.TEST1 }}
              elif [ $index -eq 1 ];then
                export GH_TOKEN=${{ secrets.TEST2 }}
              else
                export GH_TOKEN=${{ secrets.TEST3 }}
              str=""
              str=$(scorecard --repo $repoName --format json) || (sleep 60s && str=$(scorecard --repo $repoName --format json)) || (sleep 60s && str=$(scorecard --repo $repoName --format json)) || str=$(echo "faild on ${repoName}")
              echo $str >> $TARGET_FILE 
              echo "name:first  ${repoName} finished"
              sleep 5s
            done
          }&
          
          
             
          
          
          
          wait
          #关闭文件描述读写
          exec 1<&-
          exec 1>&-
          exec 2<&-
          exec 2>&-
          exec 3<&-
          exec 3>&-
          exec 4<&-
          exec 4>&-
          exec 5<&-
          exec 5>&-
          exec 6<&-
          exec 6>&-
          exec 7<&-
          exec 7>&-
          exec 8<&-
          exec 8>&-
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIRST >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SECOND >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_THIRD >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FOURTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIFTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SIXTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SEVENTH >> $TARGET_FILE
          gh auth setup-git -h github.com
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update profile/scores.txt from CI"
          git push
