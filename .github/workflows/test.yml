name: TestConcurrentScoreForOpenHarmony
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Repo List
        id: repo
        uses: yi-Xu-0100/repo-list-generator@v1.1.1
        with:
          my_token: ${{ secrets.SCORE_TS }}
          user: 'laiyoufafa'
          # (default)max_page: 10
          # (default)block_list:
          # (default)allow_empty: false
          # (default)allow_archived: true
          
      # /home/runner/work/ScoreCardActionForOpenHarmony/ScoreCardActionForOpenHarmony
      # - name: current PATH
      #  run: pwd
     
          
      - name: Get Scorecard
        run: |
          wget https://github.com/ossf/scorecard/releases/download/v4.10.5/scorecard_4.10.5_linux_amd64.tar.gz
          tar -zxvf scorecard_4.10.5_linux_amd64.tar.gz
          cp scorecard-linux-amd64 scorecard-first
          cp scorecard-linux-amd64 scorecard-second
          cp scorecard-linux-amd64 scorecard-third
          cp scorecard-linux-amd64 scorecard-fourth
          cp scorecard-linux-amd64 scorecard-fifth
          cp scorecard-linux-amd64 scorecard-sixth
          cp scorecard-linux-amd64 scorecard-seventh
          mv scorecard-linux-amd64 scorecard
          
          
      - name: Score Repositroies
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          env
          # 将scorecard加入环境变量
          export PATH=$PATH:$GITHUB_WORKSPACE
          # 用于存储结果文件
          export TARGET_FILE=/tmp/.github/profile/scores.txt
          export TMP_FILE_FIRST=tmp1.txt
          export TMP_FILE_SECOND=tmp2.txt
          export TMP_FILE_THIRD=tmp3.txt
          export TMP_FILE_FOURTH=tmp4.txt
          export TMP_FILE_FIFTH=tmp5.txt
          export TMP_FILE_SIXTH=tmp6.txt
          export TMP_FILE_SEVENTH=tmp7.txt
          touch $TMP_FILE_FIRST
          touch $TMP_FILE_SECOND
          touch $TMP_FILE_THIRD
          touch $TMP_FILE_FOURTH
          touch $TMP_FILE_FIFTH
          touch $TMP_FILE_SIXTH
          touch $TMP_FILE_SEVENTH
          
          # 下载当前仓库
          gh repo clone $GITHUB_REPOSITORY /tmp/.github
          cd /tmp/.github
          if [ ! -d "profile" ]; then
            mkdir profile
          fi
          if [ -f "$TARGET_FILE" ]; then
            rm $TARGET_FILE
          fi
          touch $TARGET_FILE
          
          # 将仓库列表变成数组格式
          repos=${{steps.repo.outputs.repoList_ALL}}
          arr=(${repos//,/ })
          length=${#arr[@]}
          
          
          #1.创建有名管道
          [ -e ./fd1 ] || mkfifo ./fd1
          exec 5<> ./fd1
          rm -rf ./fd1
          #2.创建令牌
          for i in `seq 1 5`;
          do
            echo >&5
          done
          
          #计数器
          count=0 
          #拿出令牌进行并发操作
          for((i=0;i<length;i=i+8));do
              count=$(($count+1));
              echo "count value :${count}"
              read -u5
              {
                if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN }}
                else
                  export GH_TOKEN=${{ secrets.GH_TOKEN9 }}
                fi
                if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TARGET_FILE 
                    echo "name:first  ${repoName} finished"
                fi
                echo >&5
              }&
              echo "name:first"
              read -u5
              {
                if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN2 }}
                else
                  export GH_TOKEN=${{ secrets.GH_TOKEN10 }}
                fi
                i=$(($i+1))
                if [ $i -lt $length ];then
                    
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-first --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-first --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-first --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >>  $TMP_FILE_FIRST
                    echo "name:second  ${repoName} finished"
                 fi
                 echo >&5
                 
              }&
              echo "name:second"
              read -u5
              {
                if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN3 }}
                 else
                  export GH_TOKEN=${{ secrets.GH_TOKEN11 }}
                 fi
                 
                 i=$(($i+1))
                 if [ $i -lt $length ];then
                    
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-second --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-second --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-second --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_SECOND
                    echo "name third ${repoName} finished"
                 fi
                 echo >&5
              }&
              echo "name third"
              read -u5
              {
                 if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN4 }}
                 else
                  export GH_TOKEN=${{ secrets.GH_TOKEN12 }}
                 fi
                 
                 i=$(($i+1))
                 if [ $i -lt $length ];then

                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-third --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-third --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-third --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_THIRD
                    echo "name:fourth ${repoName}  finished"
                 fi
                 echo >&5
              }&
              echo "name:fourth"
              read -u5
              {
                 if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN5 }}
                 else
                  export GH_TOKEN=${{ secrets.GH_TOKEN13 }}
                 fi
                 i=$(($i+1))
                 if [ $i -lt $length ];then

                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-fourth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-fourth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-fourth --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_FOURTH
                    echo "name:fifth ${repoName}  finished"
                 fi
                 echo >&5
              }&
              echo "name:fifth"
              read -u5
              {
                 if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN6 }}
                 else
                  export GH_TOKEN=${{ secrets.GH_TOKEN14 }}
                 fi
                 i=$(($i+1))
                 if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-fifth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-fifth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-fifth --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_FIFTH
                    echo "name:sixth  ${repoName} finished"
                 fi
                 echo >&5
              }&
              echo "name:sixth"
              read -u5
              {
                 if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN7 }}
                else
                  export GH_TOKEN=${{ secrets.GH_TOKEN15 }}
                 fi
                i=$(($i+1))
                if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-sixth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-sixth --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-sixth --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >>  $TMP_FILE_SIXTH
                    echo "name:seventh  ${repoName} finished"
                 fi
                 echo >&5
              }&
              echo "name:seventh"
              read -u5
              {
                 if [ `expr ${count} % 2` -eq 0 ]; then
                  export GH_TOKEN=${{ secrets.GH_TOKEN8 }}
                 else
                  export GH_TOKEN=${{ secrets.GH_TOKEN16 }}
                 fi
                 i=$(($i+1))
                 if [ $i -lt $length ];then
                    repoName=https://github.com/laiyoufafa/${arr[$i]}
                    echo "time:${i}    repos_url:${repoName} "
                    str=""
                    str=$(scorecard-seventh --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-seventh --repo $repoName --format json)  || sleep 2|
                    str=$(scorecard-seventh --repo $repoName --format json)  ||
                    str=$(echo "faild on ${repoName}") 
                    echo $str >> $TMP_FILE_SEVENTH
                    echo "name:eighth ${repoName} finished"
                 fi
                 echo >&5
              }&
              echo "name:eighth"
              sleep 30
          done
          
          
          
          wait
          #关闭文件描述读写
          exec 5<&-
          exec 5>&-
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIRST >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SECOND >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_THIRD >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FOURTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_FIFTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SIXTH >> $TARGET_FILE
          cat $GITHUB_WORKSPACE/$TMP_FILE_SEVENTH >> $TARGET_FILE
          gh auth setup-git -h github.com
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update profile/scores.txt from CI"
          git push
